.shape-node {
  padding: 4px;
  border-radius: 0;
  background-color: white;
  border: 1px solid #cccccc;
  min-width: 50px;
  min-height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  position: relative;
  overflow: visible;
  box-shadow: none;
  cursor: move;
  z-index: 0;
}

.shape-node.selected {
  box-shadow: 0 0 0 2px #1a73e8;
  border-color: #1a73e8;
  z-index: 10;
}

.shape-node-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  pointer-events: none;
}

.shape-node-content svg {
  width: 100%;
  height: 100%;
  max-width: 100px;
  max-height: 80px;
}

/* Draw.io style connection handles */
.shape-node-handle {
  width: 12px !important;
  height: 12px !important;
  background-color: #00a8ff !important;
  border: 2px solid white !important;
  opacity: 0 !important;
  transition: opacity 0.1s !important;
  z-index: 1000 !important;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5) !important;
  cursor: crosshair !important;
  pointer-events: all !important;
}

/* Show handles on hover */
.shape-node:hover .shape-node-handle {
  opacity: 1 !important;
}

/* Keep handles visible when selected */
.shape-node.selected .shape-node-handle {
  opacity: 1 !important;
}

/* Make handles bigger on hover */
.shape-node-handle:hover {
  transform: scale(1.5) !important;
  opacity: 1 !important;
}

/* Position handles correctly */
.shape-node-handle.top {
  top: -6px !important;
  left: 50% !important;
  transform: translate(-50%, 0) !important;
}

.shape-node-handle.bottom {
  bottom: -6px !important;
  left: 50% !important;
  transform: translate(-50%, 0) !important;
}

.shape-node-handle.left {
  left: -6px !important;
  top: 50% !important;
  transform: translate(0, -50%) !important;
}

.shape-node-handle.right {
  right: -6px !important;
  top: 50% !important;
  transform: translate(0, -50%) !important;
}

/* Hide target handles but keep them functional */
.shape-node-handle[id$="-target"] {
  opacity: 0 !important;
}

/* Connection line styles */
.react-flow__edge-path {
  stroke: #666666;
  stroke-width: 2px;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #1a73e8;
  stroke-width: 2.5px;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke: #1a73e8;
  stroke-width: 2.5px;
}

/* Connection line during creation */
.react-flow__connection-path {
  stroke: #1a73e8;
  stroke-width: 2px;
  stroke-dasharray: 5, 5;
}

/* Rotation control */
.rotation-control {
  position: absolute;
  width: 10px !important;
  height: 10px !important;
  background-color: #1a73e8;
  border: 1px solid white;
  border-radius: 50%;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  cursor: grab;
  display: none;
  z-index: 100;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);
}

.shape-node.selected .rotation-control {
  display: block;
}

.rotation-line {
  position: absolute;
  height: 12px;
  width: 1px;
  background-color: #1a73e8;
  top: -12px;
  left: 50%;
  transform: translateX(-50%);
  display: none;
}

.shape-node.selected .rotation-line {
  display: block;
}

/* Dark theme adjustments */
.dark-theme .shape-node {
  background-color: #2d2d2d;
  border-color: #555;
  color: #f0f0f0;
}

.dark-theme .shape-node.selected {
  border-color: #4d8bf8;
}

/* Group node styles */
.group-node {
  background-color: rgba(240, 240, 240, 0.4);
  border: 1px dashed #aaa;
  padding: 8px;
}
